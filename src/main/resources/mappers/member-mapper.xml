<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">
	<select id="login" resultMap="memberResultSet">
		select *
		from member
		where member_id = #{memberId} and member_status = 'Y'
	</select>
	<resultMap type="Member" id="memberResultSet">
		<id column="MEMBER_NO" property="memberNo"/>
		<result column="MEMBER_ID" property="memberId"/>
		<result column="MEMBER_PWD" property="memberPwd"/>
		<result column="MEMBER_NAME" property="memberName"/>
		<result column="MEMBER_EMAIL" property="memberEmail"/>
		<result column="IS_ADMIN" property="isAdmin"/>
		<result column="IS_JIBSA" property="isJibsa"/>
		<result column="MEMBER_STATUS" property="memberStatus"/>
		<result column="EXIT_DATE" property="exitDate"/>
		<result column="BLACKLIST" property="blackList"/>
		<result column="MEMBER_PHONE" property="memberPhone"/>
		<result column="MEMBER_ADDRESS" property="memberAddress"/>
	</resultMap>
	
	<insert id="enrollMember">
		insert into member
		values( SEQ_MEM_ID.NEXTVAL, #{ memberId }, #{ memberPwd }, #{ memberName }, #{ memberEmail }, default, default, default, sysdate, default, default, #{ memberPhone }, #{ memberAddress })
	
	</insert>

	<select id="getMemberQnaListCount" resultType="_int">
		select count(*)
		from qna
		where member_no = #{mId} and qna_status = 'Y'
	</select>	

	<select id="getMemberQnaList" resultMap="qnaResultSet">
		select *
		from qna
		where member_no = #{mId} and qna_status = 'Y'
		order by qna_no desc
	</select>
	<resultMap type="qna" id="qnaResultSet">
		<id column="QNA_NO" property="qnaNo"/>
		<result column="MEMBER_NO" property="memberNo"/>
		<result column="MEMBER_NAME" property="memberName"/>
		<result column="QNA_CATEGORY" property="qnaCategory"/>
		<result column="QNA_TITLE" property="qnaTitle"/>
		<result column="QNA_CONTENT" property="qnaContent"/>
		<result column="QUESTION_DATE" property="questionDate"/>
		<result column="QNA_ANSWER" property="qnaAnswer"/>
		<result column="ANSWER_DATE" property="answerDate"/>
		<result column="QNA_STATUS" property="qnaStatus"/>
	</resultMap>

	<select id="getMemberFaqList" resultMap="faqResultSet">
		select *
		from faq
			 join member on(member_no = faq_writer)
		where faq_status = 'Y'
	</select>
	<resultMap type="faq" id="faqResultSet">
		<id column="FAQ_NO" property="faqNo"/>
		<result column="MEMBER_NAME" property="faqWriter"/>
		<result column="FAQ_TITLE" property="faqTitle"/>
		<result column="FAQ_CONTENT" property="faqContent"/>
		<result column="FAQ_CREATE_DATE" property="faqCreateDate"/>
		<result column="FAQ_STATUS" property="faqStatus"/>
	</resultMap>
	
	<select id="getQnaSelect" resultMap="qnaResultSet">
		select *
		from qna
		where qna_no = #{qId} and qna_status = 'Y'
	</select>
	
	<update id="updateQna">
		update qna
		set qna_title = #{qnaTitle},
			qna_Category = #{qnaCategory},
			qna_content = #{qnaContent}
		where qna_no = #{qnaNo}
	</update>
	
	<update id="deleteQna">
		update qna
		set qna_status = 'N'
		where qna_no = #{qId}
	</update>

	<insert id="insertQna">
		insert into qna
		values(seq_b_id.nextval, #{memberNo}, #{qnaCategory}, #{qnaTitle}, #{qnaContent}, default, null, null, default)
	</insert>
	
	<select id="checkMemberId" resultType="_int">
		select count(*)
		from member
		where member_id = #{memberId} and member_status = 'Y'
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="updateInfo">
		update member
		set member_name = #{memberName}, member_email = #{memberEmail},
			member_phone = #{memberPhone}, member_address = #{memberAddress}
		where member_id = #{memberId}
	</update>
	
	<!-- 회원 비번 변경 -->
	<update id="updatePwd">
		update member
		set member_pwd = #{newPwd}
		where member_id = #{memberId}
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="deleteInfo">
		update member
		set member_status = 'N'
		where member_id = #{memberId}
	</update>
	
	<!-- 아이디 찾기 -->
	<select id="foundId" resultType="string">
		select member_id
		from member
		where member_name = #{memberName} and member_email = #{memberEmail} and member_status = 'Y'
	</select>
	
	<!-- 이메일 인증을 위한 조회 -->
	<select id="selectMember" resultMap="memberResultSet">
		select *
		from member
		where member_id = #{memberId} and member_status = 'Y'
	</select>
	
	<!-- 이메일 인증 후 비밀번호 변경 -->
	<update id="updateNewPwd">
		update member
		set member_pwd = #{newPwd}
		where member_id = #{memberId}
	</update>
	
	<!-- 비밀번호 찾기 시 아이디, 이메일 정보 확인 -->
	<select id="checkInfo" resultType="_int">
		select count(*)
		from member
		where member_id = #{memberId} and member_email = #{memberEmail} and member_status = 'Y'
	</select>
	
	<!-- 아이디 찾기 시 이름, 이메일 정보 확인 -->
	<select id="foundCheckId" resultType="_int">
		select count(*)
		from member
		where member_name = #{memberName} and member_email = #{memberEmail} and member_status = 'Y'
	</select>
	
	<!-- 로그인 시 정보 확인 -->
	<select id="loginCheckInfo" resultType="_int">
		select count(*)
		from member
		where member_id = #{memberId} and member_status = 'Y'
	</select>
	
	<select id="reservationListCount" resultType="_int">
		select count(*)
		from matching
		where member_no = #{memberNo} and matching_status = 'Y'
	</select>
	
	<select id="selectReserList" resultMap="matchingResultSet">
		select *
		from matching
		where member_no = #{memberNo}
		order by matching_no desc
	</select>
	
	<resultMap type="Board" id="matchingResultSet">
		<id column="MATCHING_NO" property="matchingNo"/>
		<result column="ANIMAL_NO" property="animalNo"/>
		<result column="MEMBER_NO" property="memberNo"/>
		<result column="START_DATE" property="startDate"/>
		<result column="END_DATE" property="endDate"/>
		<result column="MATCHING_PLACE" property="matchingPlace"/>
		<result column="REVIEW_CONTENT" property="reviewContent"/>
		<result column="REVIEW_RATING" property="reviewRating"/>
		<result column="REVIEW_COUNT" property="reviewCount"/>
		<result column="JIBSA_COMMENT" property="jibsaComment"/>
		<result column="MATCHING_STATUS" property="matchingStatus"/>
		<result column="REVIEW_STATUS" property="reviewStatus"/>
		<result column="JIBSA_NO" property="jibsaNo"/>
		<result column="SERVICE_TYPE" property="serviceType"/>
	</resultMap>
	
	<select id="selectReser" resultMap="matchingResultSet">
		select *
		from matching
		where member_no = #{memberNo}
	</select>
	
	<!-- 해당 매칭에 맞는 집사 프로필 정보 -->
	<select id="selectReserJibsa" resultMap="reserJibsaResultMap">
	  SELECT j.jibsa_name, j.profile_title, j.member_no
	  FROM jibsa_profile j
	  JOIN matching m ON (m.member_no = j.member_no)
	  WHERE m.jibsa_no = j.member_no
	</select>
	
	<resultMap type="JibsaProfile" id="reserJibsaResultMap">
		<id column="MEMBER_NO" property="memberNo"/>
	    <result column="JIBSA_NAME" property="jibsaName"/>
	    <result column="PROFILE_TITLE" property="profileTitle"/>
	    <result column="PROFILE_TAG" property="profileTag"/>
	    <result column="JIBSA_AVG_RATING" property="jibsaAvgRating"/>
	</resultMap>
	
	<!-- 매칭 취소 -->
	<update id="cancelMatching">
		update matching
		set matching_status = 'N'
		where matching_no = #{matchingNo}
	</update>
	
	<!-- 후기 작성 -->
	<insert id="insertReview">
		update matching
		set review_content = #{reviewContent}, review_rating = #{reviewRating}, review_status = 'Y'
		where matching_no = #{matchingNo}	
	</insert>
	
	<!-- 후기 수정 -->
	<update id="updateReview">
		update matching
		set review_content = #{reviewContent}, review_rating = #{reviewRating}
		where matching_no = #{matchingNo}
	</update>
	
	<!-- 후기 삭제 -->
	<update id="deleteReview">
		update matching
		set review_status = 'N', review_content = '', review_rating = 0, jibsa_comment = ''
		where matching_no = #{matchingNo}
	</update>
	
</mapper>
